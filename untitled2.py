# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/127ShoPPedmQrGhhA1DgszwPI19Wbuv75
"""

import matplotlib.pyplot as plt
import numpy as np

x=np.array([1,2,6,8])
y=np.array([3,8,1,10])

plt.plot(x,y)
plt.show()

import matplotlib.pyplot as plt
import numpy as np

x = np.linspace(0, 10, 100)
y = np.piecewise(x, [x < 2, (x >= 2) & (x < 4), x >= 4],
                 [lambda x: 0,
                  lambda x: 1 - (x - 2),
                  lambda x: 0])

plt.plot(x, y, color='red')
plt.title("Tiriklik ko'rsatkichi")
plt.xlabel("Vaqt")
plt.ylabel("Amplitude")
plt.grid(True)

plt.show()

import matplotlib.pyplot as plt
import numpy as np

t = np.linspace(0, 2, 1000)  # 2 soniyali interval, yuqori aniqlik

pulse = np.sin(2 * np.pi * 1.5 * t) * np.exp(-0.8 * t)  # Asosiy sinus to'lqin va amplituda pasayishi
pulse += 0.5 * np.sin(2 * np.pi * 8 * t) * np.exp(-1.5 * t)  # Detallar uchun kichik sinus to'lqin


pulse = np.abs(pulse) * np.sin(4 * np.pi * t)

plt.figure(figsize=(10, 4))
plt.plot(t, pulse, color="red", label="Yurak pulsining modeli")
plt.title("Yurak Pulsining Simulyatsiyasi")
plt.xlabel("Vaqt (soniya)")
plt.ylabel("Amplitude")
plt.grid()
plt.legend()
plt.show()

import matplotlib.pyplot as plt
import numpy as np

# Parametrlar
n_points = 5  # Yulduzning uchlari soni
radius_outer = 1  # Tashqi radius
radius_inner = 0.5  # Ichki radius

# Burchaklarni aniqlash
angles = np.linspace(0, 2 * np.pi, 2 * n_points + 1)

# Yulduzning tashqi va ichki nuqtalarini aniqlash
radii = np.array([radius_outer if i % 2 == 0 else radius_inner for i in range(len(angles))])

# Polar koordinatalardan x va y hisoblash
x = radii * np.cos(angles)
y = radii * np.sin(angles)

# Grafikni chizish
plt.figure(figsize=(6, 6))
plt.plot(x, y, color="blue", linewidth=2, label="Yulduz")
plt.fill(x, y, color="lightblue", alpha=0.5)
plt.title("Yulduz shakli")
plt.xlabel("X koordinatasi")
plt.ylabel("Y koordinatasi")
plt.axhline(0, color='black', linewidth=0.5, linestyle="--")
plt.axvline(0, color='black', linewidth=0.5, linestyle="--")
plt.grid()
plt.legend()
plt.axis("equal")
plt.show()

import matplotlib.pyplot as plt
import numpy as np

y=np.array([10,1,8,3])

plt.plot(y, marker='o', ms=20, mec='r')
plt.show()

import matplotlib.pyplot as plt
import numpy as np

x1 = np.array([2,4,6,8])

y1 = np.array([3,8,1,11])

x2 = np.array([1,2,6,3])

y2 = np.array([5,7,9,11])

plt.plot(x1,y1,x2,y2)
plt.show()

import matplotlib.pyplot as plt
import numpy as np

x = np.array([0,2,4,6,8,10])
y = np.array([0,10,14,22,24,40])

plt.scatter(x,y)
plt.show()

import matplotlib.pyplot as plt
import numpy as np
# Ma'lumotlar
y = np.array([35, 25, 25, 15])
labels = ['A', 'B', 'C', 'D']
# Doira diagrammasini chizish
plt.pie(
    y,
    labels=labels,         # Har bir segment uchun nomlar
    colors=['#ff9999', '#66b3ff', '#99ff99', '#ffcc99'],  # Ranglar
    autopct='%1.1f%%',      # Foiz ko'rsatkichlarini ko'rsatish
    startangle=90,          # Doirani boshlash burchagi
    explode=(0.1, 0, 0, 0), # Birinchi segmentni ajratib ko'rsatish
    shadow=True,            # So'ya qo'shish
    wedgeprops={'edgecolor': 'black', 'linewidth': 1.5}  # Segmentlar chegarasini qalinlashtirish
)
# Grafikni bezash
plt.title("Doira Diagrammasi", fontsize=16, fontweight='bold', color='darkblue')
# Grafikni ko'rsatish
plt.show()

import matplotlib.pyplot as plt
import numpy as np
# Ma'lumotlar
x = np.array(['A', 'B', 'C', 'D'])
y = np.array([3, 8, 1, 10])
# Horizontal ustunli grafikni chizish
plt.barh(
    x, y,
    color=['lightcoral', 'lightgreen', 'lightskyblue', 'lightyellow'],  # Har bir ustunning rangini o'zgartirish
    edgecolor='black',  # Ustunlarning chekkasini qora rangda qilish
    height=0.6,  # Ustunlarning balandligini sozlash
    alpha=0.9  # Ustunlarning shaffofligini sozlash
)
# Grafikni bezash
plt.title("Horizontal Ustunli Grafik", fontsize=16, fontweight='bold', color='darkblue')
plt.xlabel("Qiymatlar", fontsize=12, color='darkred')
plt.ylabel("Kategoriya", fontsize=12, color='darkred')
plt.grid(axis='x', color='gray', linestyle='--', linewidth=0.5, alpha=0.6)  # X o'qi bo'yicha panjara
plt.xticks(fontsize=10, color='brown')
plt.yticks(fontsize=10, color='brown')
# Grafikni ko'rsatish
plt.show()

import matplotlib.pyplot as plt
import numpy as np
# Ma'lumotlar
x = np.array(['A', 'B', 'C', 'D'])
y = np.array([3, 8, 1, 10])
# Ustunli grafikni chizish
plt.bar(
    x, y,
    color=['red', 'green', 'blue', 'orange'],  # Har bir ustun rangini o'zgartirish
    edgecolor='black',  # Ustunlarning chekkasini qora rangda qilish
    linewidth=1.5,  # Ustunlar chekkasining qalinligini sozlash
    alpha=0.8  # Ustunlarning shaffofligini sozlash
)
# Grafikni bezash
plt.title("Rangli Ustunli Grafik", fontsize=16, fontweight='bold', color='darkblue')
plt.xlabel("Kategoriya", fontsize=12, color='darkred')
plt.ylabel("Qiymatlar", fontsize=12, color='darkred')
plt.grid(axis='y', color='gray', linestyle='--', linewidth=0.5, alpha=0.6)  # Y o'qi bo'yicha panjara
plt.xticks(fontsize=10, color='brown')
plt.yticks(fontsize=10, color='brown')
# Grafikni ko'rsatish
plt.show()

import matplotlib.pyplot as plt
import numpy as np
# Ma'lumotlar (birinchi to'plam)
x1 = np.array([0, 1, 2, 3, 4, 5])
y1 = np.array([0, 2, 8, 1, 14, 7])
# Ma'lumotlar (ikkinchi to'plam)
x2 = np.array([12, 6, 8, 11, 8, 3])
y2 = np.array([5, 6, 3, 7, 17, 19])
# Birinchi nuqtalar to'plamini chizish
plt.scatter(
    x1, y1,
    color='red',
    s=100,
    edgecolor='black',
    marker='o',
    alpha=0.8,
    label='To\'plam 1'
)
# Ikkinchi nuqtalar to'plamini chizish
plt.scatter(
    x2, y2,
    color='green',
    s=150,
    edgecolor='blue',
    marker='*',
    alpha=0.9,
    label='To\'plam 2'
)
# Grafikni bezash
plt.title("Ikki Nuqta To'plami Grafik Dizayni", fontsize=16, fontweight='bold', color='darkblue')
plt.xlabel("X o'qi", fontsize=12, color='darkred')
plt.ylabel("Y o'qi", fontsize=12, color='darkred')
plt.grid(color='gray', linestyle='--', linewidth=0.5, alpha=0.6)  # Panjara
plt.legend(loc='best', fontsize=10, frameon=True, shadow=True)    # Afsona
plt.xticks(fontsize=10, color='brown')
plt.yticks(fontsize=10, color='brown')
# Grafikni ko'rsatish
plt.show()